{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventManager"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/eventmanager\/eventmanager"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/EventManager\/7Combine16ObservableObjectP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An event manager implementation that supports a pub-sub mechanism on Codable objects."},{"type":"text","text":" "},{"type":"text","text":"The implementation uses NotificationManager internally, but could also connect to e.g. Kafka."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventManager"}],"title":"EventManager","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:12EventManagerAAC","modules":[{"name":"EventManager"}],"navigatorTitle":[{"kind":"identifier","text":"EventManager"}]},"hierarchy":{"paths":[["doc:\/\/EventManager\/documentation\/EventManager"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/clearEventHistory()","doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/publish(_:sender:object:)","doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/subscribe(_:handler:)","doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/unsubscribe(_:token:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/EventHandlerObject"]},{"title":"Type Properties","identifiers":["doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/shared"]},{"title":"Default Implementations","identifiers":["doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/ObservableObject-Implementations"],"generated":true}],"references":{"doc://EventManager/documentation/EventManager/EventManager/EventHandlerObject":{"role":"symbol","title":"EventManager.EventHandlerObject","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventHandlerObject"}],"abstract":[{"type":"text","text":"A generic handler block that subscribers use to process subscribed events."},{"type":"text","text":" "},{"type":"text","text":"Parameters are the event name and a decodable object."}],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/EventHandlerObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventHandlerObject"}],"url":"\/documentation\/eventmanager\/eventmanager\/eventhandlerobject"},"doc://EventManager/documentation/EventManager/EventManager/unsubscribe(_:token:)":{"role":"symbol","title":"unsubscribe(_:token:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unsubscribe"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"token"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsubscribe from an event."}],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/unsubscribe(_:token:)","kind":"symbol","type":"topic","url":"\/documentation\/eventmanager\/eventmanager\/unsubscribe(_:token:)"},"doc://EventManager/documentation/EventManager/EventManager":{"role":"symbol","title":"EventManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventManager"}],"abstract":[{"type":"text","text":"An event manager implementation that supports a pub-sub mechanism on Codable objects."},{"type":"text","text":" "},{"type":"text","text":"The implementation uses NotificationManager internally, but could also connect to e.g. Kafka."}],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventManager"}],"url":"\/documentation\/eventmanager\/eventmanager"},"doc://EventManager/documentation/EventManager/EventManager/shared":{"role":"symbol","title":"shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventManager","preciseIdentifier":"s:12EventManagerAAC"}],"abstract":[{"type":"text","text":"A shared singleton that can be used to subscribe to events, and publish events."}],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/shared","kind":"symbol","type":"topic","url":"\/documentation\/eventmanager\/eventmanager\/shared"},"doc://EventManager/documentation/EventManager":{"role":"collection","title":"EventManager","abstract":[],"identifier":"doc:\/\/EventManager\/documentation\/EventManager","kind":"symbol","type":"topic","url":"\/documentation\/eventmanager"},"doc://EventManager/documentation/EventManager/EventManager/subscribe(_:handler:)":{"role":"symbol","title":"subscribe(_:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventHandlerObject","preciseIdentifier":"s:12EventManagerAAC0A13HandlerObjecta"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:12EventManagerAAC9subscribe_7handlerypSS_ySS_xtctSeRzSERzlF1TL_xmfp"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"Any"}],"abstract":[{"type":"text","text":"Subscribe to an event by name."},{"type":"text","text":" "},{"type":"text","text":"This call is strongly typed, it will attempt to deserialize a JSON object into the type passed in."},{"type":"text","text":" "},{"type":"text","text":"In case deserialization fails, an error will be logged, but the subscriber is not separately notified of the failure."}],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/subscribe(_:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/eventmanager\/eventmanager\/subscribe(_:handler:)"},"doc://EventManager/documentation/EventManager/EventManager/ObservableObject-Implementations":{"role":"collectionGroup","title":"ObservableObject Implementations","abstract":[],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/ObservableObject-Implementations","kind":"article","type":"topic","url":"\/documentation\/eventmanager\/eventmanager\/observableobject-implementations"},"doc://EventManager/documentation/EventManager/EventManager/publish(_:sender:object:)":{"role":"symbol","title":"publish(_:sender:object:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publish"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sender"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"object"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:12EventManagerAAC7publish_6sender6objectySS_SSxtSeRzSERzlF1TL_xmfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Publish a codable object as JSON onto the eventing infrastructure."}],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/publish(_:sender:object:)","kind":"symbol","type":"topic","url":"\/documentation\/eventmanager\/eventmanager\/publish(_:sender:object:)"},"doc://EventManager/documentation/EventManager/EventManager/clearEventHistory()":{"role":"symbol","title":"clearEventHistory()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearEventHistory"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Clear the entire history of published events."}],"identifier":"doc:\/\/EventManager\/documentation\/EventManager\/EventManager\/clearEventHistory()","kind":"symbol","type":"topic","url":"\/documentation\/eventmanager\/eventmanager\/cleareventhistory()"},"doc://EventManager/7Combine16ObservableObjectP":{"type":"unresolvable","title":"Combine.ObservableObject","identifier":"doc:\/\/EventManager\/7Combine16ObservableObjectP"}}}